"""
This type stub file was generated by pyright.
"""

"""pyCrypto Crypto-related routines for oauth2client."""
class PyCryptoVerifier:
    """Verifies the signature on a message."""
    def __init__(self, pubkey) -> None:
        """Constructor.

        Args:
            pubkey: OpenSSL.crypto.PKey (or equiv), The public key to verify
            with.
        """
        ...
    
    def verify(self, message, signature):
        """Verifies a message against a signature.

        Args:
            message: string or bytes, The message to verify. If string, will be
                     encoded to bytes as utf-8.
            signature: string or bytes, The signature on the message.

        Returns:
            True if message was signed by the private key associated with the
            public key that this object was constructed with.
        """
        ...
    
    @staticmethod
    def from_string(key_pem, is_x509_cert): # -> PyCryptoVerifier:
        """Construct a Verified instance from a string.

        Args:
            key_pem: string, public key in PEM format.
            is_x509_cert: bool, True if key_pem is an X509 cert, otherwise it
                          is expected to be an RSA key in PEM format.

        Returns:
            Verifier instance.
        """
        ...
    


class PyCryptoSigner:
    """Signs messages with a private key."""
    def __init__(self, pkey) -> None:
        """Constructor.

        Args:
            pkey, OpenSSL.crypto.PKey (or equiv), The private key to sign with.
        """
        ...
    
    def sign(self, message):
        """Signs a message.

        Args:
            message: string, Message to be signed.

        Returns:
            string, The signature of the message for the given key.
        """
        ...
    
    @staticmethod
    def from_string(key, password=...): # -> PyCryptoSigner:
        """Construct a Signer instance from a string.

        Args:
            key: string, private key in PEM format.
            password: string, password for private key file. Unused for PEM
                      files.

        Returns:
            Signer instance.

        Raises:
            NotImplementedError if the key isn't in PEM format.
        """
        ...
    


